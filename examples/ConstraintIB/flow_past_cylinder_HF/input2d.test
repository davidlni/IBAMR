// physical parameters
Re = 550                   // Reynolds number of the flow
D = 2*0.5                 // length scale
U0 = 1.0                   // velocity scale of the problem.
RHO = 1.0                  // fluid mass density
MU = RHO*U0*D/Re           // fluid viscosity

// grid spacing parameters
MAX_LEVELS = 1                            // maximum number of levels in locally refined grid
REF_RATIO  = 4                            // refinement ratio between levels
NXFINEST = 900*8                          // actual number of grid cells on finest grid level
NYFINEST = 600*8     
NX = NXFINEST/(REF_RATIO^(MAX_LEVELS - 1))  // coarsest grid spacing
NY = NYFINEST/(REF_RATIO^(MAX_LEVELS - 1))

// solver parameters
DELTA_FUNCTION       = "IB_4"                    // final simulation time
MAX_INTEGRATOR_STEPS = 10000000000000             // Max no of steps.
GROW_DT              = 2.0e0                      // growth factor for timesteps
NUM_CYCLES           = 1                          // number of cycles of fixed-point iteration.
CONVECTIVE_OP_TYPE   = "PPM"                      // convective differencing discretization type
CONVECTIVE_FORM      = "ADVECTIVE"                // how to compute the convective terms
NORMALIZE_PRESSURE   = FALSE                      // whether to explicitly force the pressure to have mean zero
CFL_MAX              = 0.3                        // maximum CFL number
DT_MAX               = 0.002/8.0                      // maximum timestep size
START_TIME           = 0.0e0                      // initial simulation time
END_TIME             = 5.0*DT_MAX   
VORTICITY_TAGGING    = TRUE                       // whether to tag cells for refinement based on vorticity thresholds
TAG_BUFFER           = 2                          // size of tag buffer used by grid generation algorithm
REGRID_INTERVAL      = 10000000000000
REGRID_CFL_INTERVAL  = 0.3                        // regrid whenever any material point could have moved 0.5 meshwidths since previous regrid
OUTPUT_U             = TRUE
OUTPUT_P             = TRUE
OUTPUT_F             = FALSE
OUTPUT_OMEGA         = TRUE
OUTPUT_DIV_U         = TRUE
ENABLE_LOGGING       = TRUE



VelocityBcCoefs_0 {
   acoef_function_0 = "1.0"
   acoef_function_1 = "0.0"
   acoef_function_2 = "1.0"
   acoef_function_3 = "1.0"

   bcoef_function_0 = "0.0"
   bcoef_function_1 = "1.0"
   bcoef_function_2 = "0.0"
   bcoef_function_3 = "0.0"

   gcoef_function_0 = "1.0"  
   gcoef_function_1 = "0.0"
   gcoef_function_2 = "1.0"
   gcoef_function_3 = "1.0"
}

VelocityBcCoefs_1 {
   acoef_function_0 = "1.0"
   acoef_function_1 = "0.0"
   acoef_function_2 = "1.0"
   acoef_function_3 = "1.0"

   bcoef_function_0 = "0.0"
   bcoef_function_1 = "1.0"
   bcoef_function_2 = "0.0"
   bcoef_function_3 = "0.0"

   gcoef_function_0 = "0.0"
   gcoef_function_1 = "0.0"
   gcoef_function_2 = "0.0"
   gcoef_function_3 = "0.0"
}

IBHierarchyIntegrator {
   start_time           = START_TIME
   end_time             = END_TIME
   grow_dt              = GROW_DT
   num_cycles           = NUM_CYCLES
   regrid_cfl_interval  = REGRID_CFL_INTERVAL
   regrid_interval      = REGRID_INTERVAL
   dt_max               = DT_MAX
   enable_logging       = ENABLE_LOGGING
   max_integrator_steps = MAX_INTEGRATOR_STEPS
   error_on_dt_change   = TRUE
   warn_on_dt_change    = FALSE
}

ConstraintIBMethod {
   delta_fcn                = DELTA_FUNCTION
   enable_logging           = ENABLE_LOGGING
   needs_divfree_projection = TRUE
   rho_fluid                = RHO
   mu_fluid                 = MU
   structure_names = "cylinder2d"
   
   PrintOutput {
   print_output          = TRUE               //default false
   output_interval       = 8                  //default 1
   output_drag           = TRUE               //default false
   output_power          = FALSE              //default false
   output_rig_transvel   = FALSE              //default false
   output_rig_rotvel     = FALSE              //default false
   output_com_coords     = FALSE              //default false
   output_moment_inertia = FALSE              //default false
   output_eulerian_mom   = FALSE              //default false
   output_dirname        = "./cylinderDump"        //default "./ConstraintIBMethodDump"
   base_filename         = "cylinder2d"          //default  "ImmersedStructure"
  }

}

num_structures = 1

ConstraintIBKinematics {

cylinder2d {
     structure_names                  = "cylinder2d"
     structure_levels                 =  MAX_LEVELS - 1
     calculate_translational_momentum = 0,0,0
     calculate_rotational_momentum    = 0,0,0
     lag_position_update_method       = "CONSTRAINT_VELOCITY"
     tagged_pt_identifier             = MAX_LEVELS - 1, 0  // level, relative idx of lag point
}

}

HydroForceEval {
	print_interval = 8 
	surf_print_interval = int(1.0 / DT_MAX)
	mu_fluid = MU
	lifted_struct_names = "cylinder2d_2h", "cylinder2d_3h"
    struct_names = "cylinder2d", "cylinder2d"
    is_stationary = TRUE, TRUE
}

IBStandardInitializer {
   max_levels      = MAX_LEVELS
   structure_names = "cylinder2d"
   
   cylinder2d {
      level_number = MAX_LEVELS - 1
   }
}

INSStaggeredHierarchyIntegrator {
   mu                         = MU
   rho                        = RHO
   start_time                 = START_TIME
   end_time                   = END_TIME
   grow_dt                    = GROW_DT
   convective_op_type         = CONVECTIVE_OP_TYPE
   convective_difference_form = CONVECTIVE_FORM
   normalize_pressure         = NORMALIZE_PRESSURE
   cfl                        = CFL_MAX
   dt_max                     = DT_MAX
   using_vorticity_tagging    = VORTICITY_TAGGING
   vorticity_abs_thresh       = 0.25 , 0.5 , 1 , 2
   tag_buffer                 = TAG_BUFFER
   output_U                   = OUTPUT_U
   output_P                   = OUTPUT_P
   output_F                   = OUTPUT_F
   output_Omega               = OUTPUT_OMEGA
   output_Div_U               = OUTPUT_DIV_U
   enable_logging             = ENABLE_LOGGING

   VelocityHypreSolver {
      solver_type           = "Split"
      split_solver_type     = "PFMG"
      relative_residual_tol = 1.0e-12
      max_iterations        = 1
      enable_logging        = FALSE
   }

   VelocityFACSolver {
      num_pre_sweeps  = 0
      num_post_sweeps = 1
      coarse_solver_choice = "hypre"
      coarse_solver_tolerance = 1.0e-12
      coarse_solver_max_iterations = 1
      prolongation_method = "CONSTANT_REFINE"
      restriction_method  = "CONSERVATIVE_COARSEN"
      hypre_solver {
         solver_type           = "Split"
         split_solver_type     = "PFMG"
         relative_residual_tol = 1.0e-12
         max_iterations        = 1
         enable_logging        = FALSE
      }
   }

   PressureHypreSolver {
      solver_type           = "PFMG"
      rap_type              = 0
      relax_type            = 2
      skip_relax            = 1
      num_pre_relax_steps   = 2
      num_post_relax_steps  = 2
      relative_residual_tol = 1.0e-2
      max_iterations        = 100
      enable_logging        = FALSE
   }

   PressureFACSolver {
      num_pre_sweeps  = 0
      num_post_sweeps = 3
      coarse_solver_choice = "hypre"
      coarse_solver_tolerance = 1.0e-12
      coarse_solver_max_iterations = 1
      prolongation_method = "LINEAR_REFINE"
      restriction_method  = "CONSERVATIVE_COARSEN"
      hypre_solver {
         solver_type           = "PFMG"
         rap_type              = 0
         relax_type            = 2
         skip_relax            = 1
         num_pre_relax_steps   = 0
         num_post_relax_steps  = 3
         relative_residual_tol = 1.0e-12
         max_iterations        = 1
         enable_logging        = FALSE
      }
   }
}

Main {

// log file parameters
   log_file_name               = "cylin2d.log"
   log_all_nodes               = FALSE

// visualization dump parameters
   viz_writer                  = "VisIt","Silo"
   viz_dump_interval           = 80             // zero to turn off
   viz_dump_dirname            = "viz_cylin2d"
   visit_number_procs_per_file = 1

// restart dump parameters
   restart_dump_interval       = 500                   // zero to turn off
   restart_dump_dirname        = "restart_cylin2d"

// hierarchy data dump parameters
   data_dump_interval          = 0                       // zero to turn off
   data_dump_dirname           = "hier_data_cylin2d"

// timer dump parameters
   timer_dump_interval         = 0                     // zero to turn off
}

CartesianGeometry {
   domain_boxes = [ (0,0) , (NX - 1 , NY - 1) ]
   x_lo         =  -6.0*D, -6.0*D                          // lower end of computational domain.
   x_up         =   12.0*D,  6.0*D                      // upper end of computational domain.
   periodic_dimension = 0, 0
}

GriddingAlgorithm {
   max_levels = MAX_LEVELS           // Maximum number of levels in hierarchy.
   ratio_to_coarser {
      level_1 = REF_RATIO, REF_RATIO  // vector ratio to next coarser level
      level_2 = REF_RATIO, REF_RATIO
      level_3 = REF_RATIO, REF_RATIO
      level_4 = REF_RATIO, REF_RATIO
      level_5 = REF_RATIO, REF_RATIO
      level_6 = REF_RATIO, REF_RATIO
      level_7 = REF_RATIO, REF_RATIO
   }

   largest_patch_size {
      level_0 = NX, NY // largest patch allowed in hierarchy
      level_1 = NX*REF_RATIO, NY*REF_RATIO                  // all finer levels will use same values as level_0...
      level_2 = NX*REF_RATIO^2, NY*REF_RATIO^2
      level_3 = NX*REF_RATIO^3, NY*REF_RATIO^3
      level_4 = NX*REF_RATIO^4, NY*REF_RATIO^4
   }

   smallest_patch_size {
      level_0 =  32,  32 // smallest patch allowed in hierarchy
                       // all finer levels will use same values as level_0...
   }

   allow_patches_smaller_than_minimum_size_to_prevent_overlaps = TRUE
   efficiency_tolerance   = 0.85e0    // min % of tag cells in new patch level
   combine_efficiency     = 0.85e0    // chop box if sum of volumes of smaller
                                      // boxes < efficiency * vol of large box
}

StandardTagAndInitialize {
   //tagging_method = "GRADIENT_DETECTOR"
   tagging_method = "REFINE_BOXES"
   RefineBoxes{
      level_0 = [ (0, 2*NY/12) , (10*NX/18 - 1 , 10*NY/12 - 1) ]
      level_1 = [ (0, 3*NY*REF_RATIO/12) , (9*NX*REF_RATIO/18 - 1 , 9*NY*REF_RATIO/12 - 1) ]
      level_2 = [ (0, 4*NY*REF_RATIO^2/12) , (8*NX*REF_RATIO^2/18 - 1 , 8*NY*REF_RATIO^2/12 - 1) ]
      level_3 = [ (0, 5*NY*REF_RATIO^3/12) , (7*NX*REF_RATIO^3/18 - 1 , 7*NY*REF_RATIO^3/12 - 1) ]
   }
}

LoadBalancer {
   bin_pack_method     = "SPATIAL"
   max_workload_factor = 1
}

TimerManager{
   print_exclusive = TRUE
   print_total = FALSE
   print_threshold = 0
   print_percentage = TRUE
   timer_list = "IBAMR::*::*", "IBTK::*::*" , "*::*::*", "*::ConstraintIBMethod::*" 
}
